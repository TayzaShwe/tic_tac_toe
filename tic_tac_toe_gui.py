# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'MainWindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from tic_tac_toe_class import tic_tac_toe


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(600, 600)

        # Main window
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        # Main Title
        self.mainTitle = QtWidgets.QLabel(self.centralwidget)
        self.mainTitle.setGeometry(QtCore.QRect(50, 10, 500, 75))
        font = QtGui.QFont()
        font.setPointSize(19)
        font.setBold(True)
        font.setWeight(75)
        self.mainTitle.setFont(font)
        self.mainTitle.setTextFormat(QtCore.Qt.PlainText)
        self.mainTitle.setAlignment(QtCore.Qt.AlignCenter)
        self.mainTitle.setObjectName("mainTitle")

        # Choice of opponent label
        self.choiceLabel = QtWidgets.QLabel(self.centralwidget)
        self.choiceLabel.setGeometry(QtCore.QRect(150, 140, 300, 20))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.choiceLabel.setFont(font)
        self.choiceLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.choiceLabel.setObjectName("choiceLabel")

        # Line seperating main title and rest of content
        self.MainTitleLine = QtWidgets.QFrame(self.centralwidget)
        self.MainTitleLine.setGeometry(QtCore.QRect(25, 90, 550, 16))
        self.MainTitleLine.setFrameShape(QtWidgets.QFrame.HLine)
        self.MainTitleLine.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.MainTitleLine.setObjectName("MainTitleLine")

        # Frame for the bot choice
        self.botFrame = QtWidgets.QFrame(self.centralwidget)
        self.botFrame.setGeometry(QtCore.QRect(35, 200, 230, 230))
        self.botFrame.setFrameShape(QtWidgets.QFrame.Box)
        self.botFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.botFrame.setLineWidth(1)
        self.botFrame.setMidLineWidth(1)
        self.botFrame.setObjectName("botFrame")

        # Frame line for bot choice
        self.botFrameLine = QtWidgets.QFrame(self.botFrame)
        self.botFrameLine.setGeometry(QtCore.QRect(30, 60, 181, 16))
        self.botFrameLine.setFrameShape(QtWidgets.QFrame.HLine)
        self.botFrameLine.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.botFrameLine.setObjectName("botFrameLine")

        # Choose difficulty label for bot choice
        self.choosedifLabel = QtWidgets.QLabel(self.botFrame)
        self.choosedifLabel.setGeometry(QtCore.QRect(40, 90, 161, 16))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.choosedifLabel.setFont(font)
        self.choosedifLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.choosedifLabel.setObjectName("choosedifLabel")

        # Bot choice radio button. Added to player2Group
        self.botRadioButton = QtWidgets.QRadioButton(self.botFrame)
        self.botRadioButton.setGeometry(QtCore.QRect(90, 30, 61, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.botRadioButton.setFont(font)
        self.botRadioButton.setObjectName("botRadioButton")

        # Bot difficulty easy radio button. Added to botDifficultyGroup.
        self.easyRadioButton = QtWidgets.QRadioButton(self.botFrame)
        self.easyRadioButton.setGeometry(QtCore.QRect(80, 130, 71, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.easyRadioButton.setFont(font)
        self.easyRadioButton.setCheckable(True)
        self.easyRadioButton.setChecked(False)
        self.easyRadioButton.setObjectName("easyRadioButton")

        # Bot difficulty hard radio button. Added to botDifficultyGroup.
        self.hardRadioButton = QtWidgets.QRadioButton(self.botFrame)
        self.hardRadioButton.setGeometry(QtCore.QRect(80, 160, 71, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.hardRadioButton.setFont(font)
        self.hardRadioButton.setObjectName("hardRadioButton")

        # Start button
        self.startButton = QtWidgets.QPushButton(self.centralwidget)
        self.startButton.setGeometry(QtCore.QRect(225, 470, 150, 50))
        self.startButton.setFlat(False)
        self.startButton.setObjectName("startButton")

        # Frame for the player 2 choice
        self.player2Frame = QtWidgets.QFrame(self.centralwidget)
        self.player2Frame.setGeometry(QtCore.QRect(335, 200, 230, 230))
        self.player2Frame.setFrameShape(QtWidgets.QFrame.Box)
        self.player2Frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.player2Frame.setLineWidth(1)
        self.player2Frame.setMidLineWidth(1)
        self.player2Frame.setObjectName("player2Frame")

        # Player 2 radio button for the player 2 choice. Added to player2Group.
        self.player2RadioButton = QtWidgets.QRadioButton(self.player2Frame)
        self.player2RadioButton.setGeometry(QtCore.QRect(70, 100, 99, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.player2RadioButton.setFont(font)
        self.player2RadioButton.setAutoExclusive(True)
        self.player2RadioButton.setObjectName("player2RadioButton")

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 600, 20))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
    
        # Button Group for opponent type. Bot or Player 2. 
        player2Group = QtWidgets.QButtonGroup(MainWindow)
        player2Group.addButton(self.botRadioButton)
        player2Group.addButton(self.player2RadioButton)

        # Button Group for bot difficulty type. Easy or Hard.
        botDifficultyGroup = QtWidgets.QButtonGroup(MainWindow)
        botDifficultyGroup.addButton(self.easyRadioButton)
        botDifficultyGroup.addButton(self.hardRadioButton)

        # Checks which opponent option is checked and sets opponent type accordingly
        self.opType = ""
        self.player2RadioButton.toggled.connect(lambda: self.setOpPlayer2(self.player2RadioButton.isChecked()))
        self.botRadioButton.toggled.connect(lambda: self.setOpBot(self.botRadioButton.isChecked()))

        # Checks which bot difficulty option is checked and sets the difficulty accordingly
        self.botDif = ""
        self.easyRadioButton.toggled.connect(lambda: self.setBotDifEasy(self.easyRadioButton.isChecked()))
        self.hardRadioButton.toggled.connect(lambda: self.setBotDifHard(self.hardRadioButton.isChecked()))

        # Checks if the start button is clicked
        self.startButton.clicked.connect(self.startGame)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    # sets opponent type to player 2
    def setOpPlayer2(self, player2Checked):
        if (player2Checked):
            self.opType = "player2"
            self.choiceLabel.setText("Player 2 chosen")   
    
    # sets opponent type to bot
    def setOpBot(self, botChecked):
        if (botChecked):
            self.opType = "bot"
            self.choiceLabel.setText("Bot chosen")        

    # sets bot difficulty to easy
    def setBotDifEasy(self, easyChecked):
        if (easyChecked):
            self.botDif = "easy"

    # sets bot difficulty to hard
    def setBotDifHard(self, hardChecked):
        if (hardChecked):
            self.botDif = "hard"
    
    # starts the game. Checks if op type is chosen and if bot difficulty is chosen 
    def startGame(self):
        print("start button pressed")
        if (self.opType=="bot"):
            if (self.botDif==""): 
                self.choiceLabel.setText("Don't forget to pick a difficulty!")
                return
        elif (self.opType==""):
            self.choiceLabel.setText("You forgot to pick your opponent type!")
            return
        game = tic_tac_toe()
        

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.mainTitle.setText(_translate("MainWindow", "The Super Cool Tic-Tac-Toe Game"))
        self.choiceLabel.setText(_translate("MainWindow", "Who do you want to play against?"))
        self.choosedifLabel.setText(_translate("MainWindow", "Choose difficulty:"))
        self.botRadioButton.setText(_translate("MainWindow", "Bot"))
        self.easyRadioButton.setText(_translate("MainWindow", "Easy"))
        self.hardRadioButton.setText(_translate("MainWindow", "Hard"))
        self.startButton.setText(_translate("MainWindow", "Start"))
        self.player2RadioButton.setText(_translate("MainWindow", "Player 2"))




if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
